/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tortasdominio.presentacion;

import com.mycompany.tortasdominio.entidades.Orden;
import com.mycompany.tortasdominio.entidades.Producto;
import com.mycompany.tortasdominio.subsistemas.orden.FacadeAdminOrden;
import com.mycompany.tortasdominio.subsistemas.orden.IAdminOrden;
import com.mycompany.tortaspersistencia.dtos.NuevaOrdenDTO;
import com.mycompany.tortaspersistencia.dtos.NuevoProductoDTO;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author crist
 */
public class Ordenes extends javax.swing.JFrame {
List<Orden> listaOrdenes = new ArrayList<>();
    /**
     * Creates new form Ordenes
     */
    public Ordenes() {
        initComponents();
        mostrarTabla(listaOrdenes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eliminarrBoton = new javax.swing.JButton();
        entregadaBoton = new javax.swing.JButton();
        txtNumOrden = new javax.swing.JTextField();
        tablaOrdenes = new javax.swing.JScrollPane();
        tablaOrden = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        eliminarrBoton.setText("cancelada");
        eliminarrBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarrBotonActionPerformed(evt);
            }
        });

        entregadaBoton.setText("entregada");
        entregadaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entregadaBotonActionPerformed(evt);
            }
        });

        txtNumOrden.setText("jTextField1");

        tablaOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre ", "productos", "total", "estados", "numero de orden"
            }
        ));
        tablaOrdenes.setViewportView(tablaOrden);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tablaOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(eliminarrBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(txtNumOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(entregadaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tablaOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(txtNumOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(entregadaBoton)
                            .addComponent(eliminarrBoton))
                        .addGap(24, 24, 24))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarrBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarrBotonActionPerformed
        // TODO add your handling code here:
         IAdminOrden adminOrden = new FacadeAdminOrden();
       // adminOrden.cancelarOrden(txtNumOrden.getText());
        cargarDatosTabla(tablaOrden, listaOrdenes);
    }//GEN-LAST:event_eliminarrBotonActionPerformed

    private void entregadaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entregadaBotonActionPerformed
        // TODO add your handling code here:
        IAdminOrden adminOrden = new FacadeAdminOrden();
      //  adminOrden.cancelarOrden(txtNumOrden.getText());
        cargarDatosTabla(tablaOrden, listaOrdenes);
    }//GEN-LAST:event_entregadaBotonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminarrBoton;
    private javax.swing.JButton entregadaBoton;
    private javax.swing.JTable tablaOrden;
    private javax.swing.JScrollPane tablaOrdenes;
    private javax.swing.JTextField txtNumOrden;
    // End of variables declaration//GEN-END:variables
 /*public void mostrarTabla(List<Orden> ordenes) {
    DefaultTableModel model = (DefaultTableModel) tablaOrden.getModel();

    model.setRowCount(0);

    for (Orden orden : ordenes){
        String productos = orden.getProductos().stream()
                .map(p -> p.getNombre()) // Suponiendo que Producto tiene un m√©todo getNombre() para obtener el nombre del producto
                .collect(Collectors.joining(", "));
        
        Object[] rowData = {orden.getNombreCliente(), productos, orden.getTotal(), orden.getEstado(), orden.getNumeroOrden()};
        model.addRow(rowData);
    }
}*/public void cargarDatosTabla(JTable tabla, List<Orden> listaOrdenes) {
    DefaultTableModel modelo = new DefaultTableModel();
    tabla.setModel(modelo);

    modelo.addColumn("Nombre");
    modelo.addColumn("Productos");
    modelo.addColumn("Total");
    modelo.addColumn("Estado");
    modelo.addColumn("Numero de orden");

    for (Orden or : listaOrdenes) {
        String productos = or.getProductos().stream()
                .map(p -> p.getNombre() + " x" + p.getCantidad())
                .collect(Collectors.joining(", "));

        Object[] filas = {
            or.getNombreCliente(),
            productos,
            or.getTotal(),
            or.getEstado(),
            or.getNumeroOrden()
        };
        modelo.addRow(filas);
    }
}



private String obtenerNombreProductos(List<NuevoProductoDTO> productos) {
    return productos.stream()
            .map(p -> p.getNombre())
            .collect(Collectors.joining(", "));
}

public void mostrarTabla(List<Orden> listaOrdenes) {
    cargarDatosTabla(tablaOrden, listaOrdenes);
}

}
